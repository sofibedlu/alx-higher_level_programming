# doctest and usage of 101-lazy_matrix_mul.py module #

#Usage: lazy_matrix_mul(...)

#the function lazy_matrix_mul accepts two matrices (m_a and m_b) and computes the multiplicat	ion of matrix: m_a or the first argumnet by m_b matrix or the second argument and return    the result

#first lets check a valid inputs:

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> print(lazy_matrix_mul([[1, 2], [2, 5]], [[2, 2], [-1, 4]]))
[[ 0 10]
 [-1 24]]

>>> print(lazy_matrix_mul([[4.3, 1.2], [4, 1]], [[5, 0.7], [5, 1]]))
[[27.5   4.21]
 [25.    3.8 ]]

#if we provide non-list argument it raises Error:

>>> print(lazy_matrix_mul("hello", [[5, 0.7], [5, 1]]))
Traceback (most recent call last):
TypeError: Cannot cast array data from dtype('float64') to dtype('<U32') according to the rule 'safe'

#not only the matrix should be list but also list of lists otherwise it raises Error:

>>> print(lazy_matrix_mul([[2, 4], [1, 2]], [[5, 0.7], "car"]))
Traceback (most recent call last):
TypeError: can only concatenate list (not "str") to list

>>> print(lazy_matrix_mul([[1, 4], None], [[5, 0.7], "hello"]))
Traceback (most recent call last):
TypeError: can't multiply sequence by non-int of type 'list'

#if we provide empty matrix it raises error:

>>> print(lazy_matrix_mul([[]], [[]]))
Traceback (most recent call last):
ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)

#if one element of those list of lists is not an integer or a float it also raises error:

>>> print(lazy_matrix_mul([[1, 'a'], [5, 8]], [[1, 2], [4, 0]]))
Traceback (most recent call last):
ValueError: data type must provide an itemsize

#if the matrix have different size of rows it raises error:

>>> print(lazy_matrix_mul([[1, 6], [5, 8,], [1, 2, 3]], [[1, 2], [4, 0]]))
Traceback (most recent call last):
ValueError: shapes (3,) and (2,2) not aligned: 3 (dim 0) != 2 (dim 0)

#if we provides matrix that can't be multiplied raises error:

>>> print(lazy_matrix_mul([[1, 6], [5, 8,]], [[1, 2], [4, 0], [3, 1]]))
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

#if we didn't provide the matrices it raises error:

>>> print(lazy_matrix_mul())
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> print(lazy_matrix_mul([[1, 2]]))
Traceback (most recent call last):
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

::
>>> print(lazy_matrix_mul([[1, 2]], None))
Traceback (most recent call last):
TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'
