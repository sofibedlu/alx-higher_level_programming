#doctest for matrix_divided

#matrix must be list of lists of integers of floats:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[2, 5, 6], [4, 6, 2]], 2)
[[1.0, 2.5, 3.0], [2.0, 3.0, 1.0]]

#all elements of the matrix must be list
#all elements of the matrix elements must be integer or floats
>>> matrix_divided([[2, 4, 9], 'hello'], 4)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 5, 6], [4, 6, 'a']], 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([(2, 5, 6), [4, 6, 2]], 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#all row's of the matrix must have equal size:

>>> matrix_divided([[2, 5, 6], [4, 6], [4, 5, 6]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

#div must be a number

>>> matrix_divided([[2, 4, 9]], 'cat')
Traceback (most recent call last):
  ...
TypeError: div must be a number

#division by zero is not allowed:

>>> matrix_divided([[2, 5], [4, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

#all elements in the matrix round to 2 decimal places

>>> matrix_divided([[2, 5.6], [4, 6]], 5)
[[0.4, 1.12], [0.8, 1.2]]

#check for empty matrix:
>>> matrix_divided([], 6)
[]
>>> matrix_divided([[], [], []], 6)
[[], [], []]

#check for div == 1, the result matrix should be round to two decimal places
>>> matrix_divided([[2, 4, 9], [4,6,6]], 1)
[[2.0, 4.0, 9.0], [4.0, 6.0, 6.0]]

#matrix with only one element
>>> matrix_divided([[2, 4, 9]], 4)
[[0.5, 1.0, 2.25]]
>>> matrix_divided([[2]], 4)
[[0.5]]
