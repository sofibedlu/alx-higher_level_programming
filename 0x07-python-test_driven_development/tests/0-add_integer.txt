# doctest for 0-add_integer.py module

#Usage: add_integer(num1, num2)...

'add_integer()' returns the sum of its arguments. and the argument should be
integers or float numbers

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(5,6)
11

for floating numbers first must be casted to integer:
>>> add_integer(5.78,6.5)
11

>>> add_integer(-3,-2)
-5
>>> add_integer(-3,2)
-1
>>> add_integer(0)
98

for non numbers arguments:
>>> add_integer(3, 'hello') # doctest: +ELLIPSIS
Traceback (most recent call last):
  ...
TypeError: b must be an integer

>>> add_integer('car', 6) # doctest: +ELLIPSIS
Traceback (most recent call last):
  ...
TypeError: a must be an integer

>>> add_integer(None) # doctest: +ELLIPSIS
Traceback (most recent call last):
  ...
TypeError: a must be an integer

#if we provide infinty it raises error:

>>> add_integer(float('inf'), 9)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

#and also NaN values:

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
